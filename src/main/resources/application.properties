
#Frontend configuration
ai.left-service=openai
ai.right-service=openai
ai.left-service.rag=true
ai.right-service.rag=false

# OpenAIService configuration
quarkus.langchain4j.openai.commercial.api-key=${OPENAI_APIKEY}
quarkus.langchain4j.openai.commercial.base-url=https://api.openai.com/v1/
quarkus.langchain4j.openai.commercial.chat-model.model-name=gpt-3.5-turbo-0125
quarkus.langchain4j.openai.commercial.chat-model.temperature=0.0
quarkus.langchain4j.openai.commercial.timeout=100s
quarkus.langchain4j.openai.commercial.log-requests=true
quarkus.langchain4j.openai.commercial.log-responses=true

# openai standard configuration
quarkus.langchain4j.openai.base-url=https://api.openai.com/v1/

# togetherai configuration
quarkus.langchain4j.openai.opensource.api-key=${TOGETHERAI_API_KEY}
quarkus.langchain4j.openai.opensource.base-url=https://api.together.xyz
quarkus.langchain4j.openai.opensource.chat-model.model-name=WizardLM/WizardLM-13B-V1.2
quarkus.langchain4j.openai.opensource.chat-model.temperature=0.0
quarkus.langchain4j.openai.opensource.timeout=100s
quarkus.langchain4j.openai.opensource.log-requests=true
quarkus.langchain4j.openai.opensource.log-responses=true
quarkus.langchain4j.openai.opensource.max-retries=1


# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = gibler
quarkus.datasource.password = connormcgyver
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/thesis-db

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = update

# Config for RAG
quarkus.langchain4j.pgvector.dimension=384
quarkus.langchain4j.chat-memory.memory-window.max-messages=5
